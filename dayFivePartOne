def move_crates(crates, numcrates, oldcolumn, newcolumn):

    if oldcolumn == newcolumn:
        return  # No need to move if old and new columns are the same

    oldstack = crates[oldcolumn - 1]
    newstack = crates[newcolumn - 1]

    if numcrates > len(oldstack):
        numcrates = len(oldstack)  # Ensure you don't move more crates than available

    moved_crates = oldstack[-numcrates:]  # Get the crates to move
    oldstack[-numcrates:] = []  # Remove the moved crates from the old stack
    newstack.extend(moved_crates)  # Add the moved crates to the new stack

with open("advent/input.txt") as f:
    lines = f.readlines()

omit = ["move", "from", "to", "\n", " "]
newlines = []
for line in lines:
    for word in omit:
        line = line.replace(word, '')
    newlines.append(line)

stack1 = ['FTCLRPGQ']
stack2 = ['NQHWRFSJ']
stack3 = ['FBHWPMQ']
stack4 = ['VSTDF']
stack5 = ['QLDWVFZ']
stack6 = ['ZCLS']
stack7 = ['ZBMVDF']
stack8 = ['TJB']
stack9 = ['QNBGLSPH']

crates = [stack1, stack2, stack3, stack4, stack5, stack6, stack7, stack8, stack9]
inst = line

for inst in newlines:
    #print(inst)
    if len(inst) == 4:
        oldcolumn = int(inst[2])
        newcolumn = int(inst[3])
        numcrates = int(inst[0] + inst[1])
        print(inst)
        print(numcrates)
        print(oldcolumn)
        print(newcolumn)
    else:
        oldcolumn = int(inst[1])
        newcolumn = int(inst[2])
        numcrates = int(inst[0])
        print(inst)
        print(numcrates)
        print(oldcolumn)
        print(newcolumn)
    move_crates(crates, numcrates, oldcolumn, newcolumn)

for i, stack in enumerate(crates, start=1):
    print(f"Stack {i}: {stack}")
    
    

    
